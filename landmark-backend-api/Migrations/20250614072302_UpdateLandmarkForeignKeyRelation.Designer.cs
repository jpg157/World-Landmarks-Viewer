// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using landmark_backend_api.Data.Repositories.Config;

#nullable disable

namespace landmark_backend_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250614072302_UpdateLandmarkForeignKeyRelation")]
    partial class UpdateLandmarkForeignKeyRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("landmark_backend_api.Models.Landmark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageApiUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("LandmarkCreationDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Landmarks");
                });

            modelBuilder.Entity("landmark_backend_api.Models.LandmarkLocationData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LandmarkId")
                        .HasColumnType("integer");

                    b.Property<double>("XCoord")
                        .HasColumnType("double precision");

                    b.Property<double>("YCoord")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("LandmarkId")
                        .IsUnique();

                    b.ToTable("LandmarkLocations");
                });

            modelBuilder.Entity("landmark_backend_api.Models.LandmarkLocationData", b =>
                {
                    b.HasOne("landmark_backend_api.Models.Landmark", "Landmark")
                        .WithOne("LandmarkLocation")
                        .HasForeignKey("landmark_backend_api.Models.LandmarkLocationData", "LandmarkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Landmark");
                });

            modelBuilder.Entity("landmark_backend_api.Models.Landmark", b =>
                {
                    b.Navigation("LandmarkLocation")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
